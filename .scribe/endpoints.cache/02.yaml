## Autogenerated by Scribe. DO NOT MODIFY.

name: Organizations
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/organizations
    metadata:
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all organizations'
      description: |-
        Retrieve a list of all registered organizations in the system.
        This endpoint provides information about NGOs including their basic details,
        contact information, and operational status.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Green Earth Foundation",
                "slug": "green-earth-foundation",
                "description": "Environmental conservation organization",
                "email": "contact@greenearth.org",
                "website": "https://greenearth.org",
                "phone": "+1234567890",
                "created_at": "2024-01-15T10:00:00.000000Z",
                "updated_at": "2024-01-15T10:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/organizations/{slug}'
    metadata:
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get organization details'
      description: |-
        Retrieve detailed information about a specific organization using its slug.
        This includes comprehensive information about the organization's mission,
        contact details, and operational information.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the organization.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      organization:
        name: organization
        description: 'The slug of the organization.'
        required: true
        example: green-earth-foundation
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: 1
      organization: green-earth-foundation
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Green Earth Foundation",
              "slug": "green-earth-foundation",
              "description": "Environmental conservation organization",
              "email": "contact@greenearth.org",
              "website": "https://greenearth.org",
              "phone": "+1234567890",
              "created_at": "2024-01-15T10:00:00.000000Z",
              "updated_at": "2024-01-15T10:00:00.000000Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Organization not found"
          }
        headers: []
        description: 'Organization not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
