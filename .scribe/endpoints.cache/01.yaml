## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/me/preferences
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user preferences'
      description: |-
        Retrieve the current user's preferences. If no preferences exist,
        default preferences will be created and returned.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer sample-token'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/me/preferences
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user preferences'
      description: |-
        Update the authenticated user's preferences. Only provided fields will be updated;
        other preferences will remain unchanged.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.language:
        name: data.attributes.language
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - ar
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.pushNotifications:
        name: data.attributes.pushNotifications
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.emailNotifications:
        name: data.attributes.emailNotifications
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      language:
        name: language
        description: 'optional The preferred language (en, es, fr, etc.).'
        required: false
        example: en
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      appearance:
        name: appearance
        description: 'optional The appearance theme (light, dark, auto).'
        required: false
        example: dark
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email_notifications:
        name: email_notifications
        description: 'optional Enable/disable email notifications.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      push_notifications:
        name: push_notifications
        description: 'optional Enable/disable push notifications.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      profile_visibility:
        name: profile_visibility
        description: 'optional Profile visibility (public, private, friends).'
        required: false
        example: public
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          language: en
          pushNotifications: true
          emailNotifications: true
      language: en
      appearance: dark
      email_notifications: true
      push_notifications: false
      profile_visibility: public
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer sample-token'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/me
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get current user profile'
      description: |-
        Retrieve the authenticated user's profile information. Returns different
        data structures based on the user type (individual, organization, etc.).
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer sample-token'
    controller: null
    method: null
    route: null
    custom: []
